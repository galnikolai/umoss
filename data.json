{"nodes":[{"id":"1755732548861","children":[],"name":"fvvdffv","type":"folder"},{"id":"1755732551901","children":[],"name":"bfgfgbfgb","type":"folder","parentId":"1755732548861"},{"id":"1755732568258","name":"Sidebar.tsx","type":"file","parentId":"1755732551901","description":"another desc"},{"id":"1755732815252","children":[],"name":"new folder","type":"folder"},{"id":"1755761209626","name":"SettingsSideBar.tsx","type":"file","parentId":"1755732551901"}],"files":[{"id":"1755732568258","content":"import * as React from \"react\";\nimport {\n  BookOpen,\n  GitGraph,\n  GraduationCap,\n  NotebookTabs,\n  Settings,\n} from \"lucide-react\";\n\nimport { NavUser } from \"@/entities/nav-user/NavUser\";\n\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarHeader,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  useSidebar,\n} from \"@/shared/ui/sidebar\";\n\nimport { ROUTES } from \"@/shared/config/routes\";\nimport { Link } from \"react-router-dom\";\n\nconst data = {\n  user: {\n    name: \"shadcn\",\n    email: \"m@example.com\",\n    avatar: \"/avatars/shadcn.jpg\",\n  },\n  navMain: [\n    {\n      title: \"Notes\",\n      url: ROUTES.NOTES,\n      icon: NotebookTabs,\n      isActive: false,\n    },\n    {\n      title: \"Graph\",\n      url: ROUTES.GRAPH,\n      icon: GitGraph,\n      isActive: true,\n    },\n    {\n      title: \"Study\",\n      url: ROUTES.STUDY,\n      icon: BookOpen,\n      isActive: false,\n    },\n    {\n      title: \"Settings\",\n      url: ROUTES.SETTINGS,\n      icon: Settings,\n      isActive: false,\n    },\n  ],\n};\n\nexport function AppSidebar({ ...props }: React.ComponentProps<typeof Sidebar>) {\n  // Note: I'm using state to show active item.\n  // IRL you should use the url/router.\n  const { setOpen } = useSidebar();\n  const [activeItem, setActiveItem] = React.useState(data.navMain[0]);\n\n  return (\n    <Sidebar\n      collapsible=\"none\"\n      className=\"w-[calc(var(--sidebar-width-icon)+1px)]! border-r\"\n    >\n      <SidebarHeader>\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <SidebarMenuButton size=\"lg\" asChild className=\"md:h-8 md:p-0\">\n              <a href=\"#\">\n                <div className=\"text-sidebar-primary-foreground flex aspect-square size-8 items-center justify-center rounded-lg\">\n                  <GraduationCap className=\"size-4 text-blue-500\" />\n                </div>\n                <div className=\"grid flex-1 text-left text-sm leading-tight\">\n                  <span className=\"truncate font-medium\">Acme Inc</span>\n                  <span className=\"truncate text-xs\">Enterprise</span>\n                </div>\n              </a>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarHeader>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupContent className=\"px-1.5 md:px-0\">\n            <SidebarMenu>\n              {data.navMain.map((item) => (\n                <Link to={item.url} key={item.title}>\n                  <SidebarMenuItem key={item.title} className=\"\">\n                    <SidebarMenuButton\n                      tooltip={{\n                        children: item.title,\n                        hidden: false,\n                      }}\n                      onClick={() => {\n                        setActiveItem(item);\n                        setOpen(true);\n                      }}\n                      isActive={activeItem?.title === item.title}\n                      className=\"px-2.5 md:px-2\"\n                    >\n                      <item.icon />\n                      <span>{item.title}</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                </Link>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n      </SidebarContent>\n      <SidebarFooter>\n        <NavUser user={data.user} />\n      </SidebarFooter>\n    </Sidebar>\n  );\n}\n","name":"Sidebar.tsx"},{"id":"1755761209626","content":"import * as React from \"react\";\nimport { ChevronRight, File, Folder } from \"lucide-react\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarHeader,\n  SidebarInput,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSub,\n  SidebarProvider,\n} from \"@/shared/ui/sidebar\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/shared/ui/collapsible\";\nimport { AppSidebar } from \"./Sidebar\";\nimport { createFileFilterStore } from \"@/lib/fileFilter\";\nimport type { TreeNode } from \"@/lib/fileFilter\";\n\nconst dataFiles = {\n  changes: [\n    { file: \"README.md\", state: \"M\" },\n    { file: \"api/hello/route.ts\", state: \"U\" },\n    { file: \"app/layout.tsx\", state: \"M\" },\n  ],\n  tree: [\n    [\n      \"app\",\n      [\n        \"api\",\n        [\"hello\", [\"route.ts\"]],\n        \"page.tsx\",\n        \"layout.tsx\",\n        [\"blog\", [\"page.tsx\"]],\n      ],\n    ],\n    [\n      \"components\",\n      [\"ui\", \"button.tsx\", \"card.tsx\"],\n      \"header.tsx\",\n      \"footer.tsx\",\n    ],\n    [\"lib\", [\"util.ts\"]],\n    [\"public\", \"favicon.ico\", \"vercel.svg\"],\n    \".eslintrc.json\",\n    \".gitignore\",\n    \"next.config.js\",\n    \"tailwind.config.js\",\n    \"package.json\",\n    \"README.md\",\n  ],\n};\n\n// Zustand store для фильтрации\nconst useFileFilterStore = createFileFilterStore(dataFiles.tree as TreeNode[]);\n\n// Древовидный компонент с Collapsible\nfunction Tree({ item }: { item: TreeNode }) {\n  const [name, ...items] = Array.isArray(item) ? item : [item];\n  if (!items.length) {\n    return (\n      <SidebarMenuButton\n        isActive={name === \"button.tsx\"}\n        className=\"data-[active=true]:bg-transparent\"\n      >\n        <File />\n        {name}\n      </SidebarMenuButton>\n    );\n  }\n  return (\n    <SidebarMenuItem>\n      <Collapsible\n        className=\"group/collapsible [&[data-state=open]>button>svg:first-child]:rotate-90\"\n        defaultOpen={name === \"components\" || name === \"ui\"}\n      >\n        <CollapsibleTrigger asChild>\n          <SidebarMenuButton>\n            <ChevronRight className=\"transition-transform\" />\n            <Folder />\n            {name}\n          </SidebarMenuButton>\n        </CollapsibleTrigger>\n        <CollapsibleContent>\n          <SidebarMenuSub>\n            {items.map((subItem, index) => (\n              <Tree key={index} item={subItem as TreeNode} />\n            ))}\n          </SidebarMenuSub>\n        </CollapsibleContent>\n      </Collapsible>\n    </SidebarMenuItem>\n  );\n}\n\nexport function SettingsSidebar({\n  children,\n  ...props\n}: React.ComponentProps<typeof Sidebar>) {\n  const filtered = useFileFilterStore((state) => state.filtered);\n  const filter = useFileFilterStore((state) => state.filter);\n  const setFilter = useFileFilterStore((state) => state.setFilter);\n\n  return (\n    <SidebarProvider\n      style={{ \"--sidebar-width\": \"350px\" } as React.CSSProperties}\n    >\n      <Sidebar\n        collapsible=\"icon\"\n        className=\"overflow-hidden *:data-[sidebar=sidebar]:flex-row\"\n        {...props}\n      >\n        <AppSidebar />\n        {/* Вторая панель */}\n        <Sidebar collapsible=\"none\" className=\"hidden flex-1 md:flex\">\n          <SidebarHeader className=\"gap-3.5 border-b p-4\">\n            <div className=\"flex w-full items-center justify-between\">\n              <div className=\"text-foreground text-base font-medium\">\n                Settings\n              </div>\n            </div>\n            <SidebarInput\n              value={filter}\n              onChange={(e) => setFilter(e.target.value)}\n            />\n          </SidebarHeader>\n          <SidebarContent>\n            <SidebarGroup className=\"px-0\">\n              <SidebarGroupContent>\n                {filter\n                  ? filtered.map((item) => (\n                      <SidebarMenuButton\n                        key={item.path}\n                        className=\"data-[active=true]:bg-transparent\"\n                      >\n                        {item.type === \"file\" ? <File /> : <Folder />}\n                        {item.name}\n                      </SidebarMenuButton>\n                    ))\n                  : (dataFiles.tree as TreeNode[]).map((item, idx) => (\n                      <Tree key={idx} item={item} />\n                    ))}\n              </SidebarGroupContent>\n            </SidebarGroup>\n          </SidebarContent>\n        </Sidebar>\n      </Sidebar>\n      <div className=\"flex flex-1 flex-col gap-4 p-4\">{children}</div>\n    </SidebarProvider>\n  );\n}\n","name":"SettingsSideBar.tsx"}]}